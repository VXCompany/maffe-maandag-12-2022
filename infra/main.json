{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "5471600470193942245"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of all the resources."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "aks-maffe-maandag",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "dnsPrefix": {
            "value": "[parameters('dnsPrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "3461438422929711880"
            }
          },
          "parameters": {
            "clusterName": {
              "type": "string",
              "defaultValue": "aks-maffe-maandag",
              "metadata": {
                "description": "The name of the Managed Cluster resource."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location of the Managed Cluster resource."
              }
            },
            "dnsPrefix": {
              "type": "string",
              "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
              }
            },
            "osDiskSizeGB": {
              "type": "int",
              "defaultValue": 0,
              "maxValue": 1023,
              "minValue": 0,
              "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
              }
            },
            "agentCount": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 50,
              "minValue": 1,
              "metadata": {
                "description": "The number of nodes for the cluster."
              }
            },
            "agentVMSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v3",
              "metadata": {
                "description": "The size of the Virtual Machine."
              }
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": "maffemaandag",
              "metadata": {
                "description": "The name of the Container Registry resource."
              }
            },
            "rbacRolesNeeded": {
              "type": "array",
              "defaultValue": [
                "b24988ac-6180-42a0-ab88-20f7382dd24c",
                "7f6c6a51-bcf8-42ba-9220-52d62157d7db"
              ],
              "metadata": {
                "description": "An array of Azure RoleIds that are required for the DeploymentScript resource"
              }
            }
          },
          "variables": {
            "acrPullRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "id-maffe-maandag",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2020-09-01",
              "name": "[parameters('clusterName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-maffe-maandag'))]": {}
                }
              },
              "properties": {
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                  {
                    "name": "agentpool",
                    "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                    "count": "[parameters('agentCount')]",
                    "vmSize": "[parameters('agentVMSize')]",
                    "osType": "Linux",
                    "mode": "System"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-maffe-maandag')]"
              ]
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2022-02-01-preview",
              "name": "[parameters('containerRegistryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "adminUserEnabled": true
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('containerRegistryName'))]",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), variables('acrPullRoleDefinitionId'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').identityProfile.kubeletidentity.objectId]",
                "roleDefinitionId": "[variables('acrPullRoleDefinitionId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "id-run-maffe-maandag",
              "location": "[parameters('location')]"
            },
            {
              "copy": {
                "name": "rbac",
                "count": "[length(parameters('rbacRolesNeeded'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', parameters('clusterName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), parameters('rbacRolesNeeded')[copyIndex()], resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-run-maffe-maandag'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('rbacRolesNeeded')[copyIndex()])]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-run-maffe-maandag'), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'id-run-maffe-maandag')]"
              ]
            }
          ],
          "outputs": {
            "kubeletIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').identityProfile.kubeletidentity.clientId]"
            },
            "kubeletIdentityObjectId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').identityProfile.kubeletidentity.objectId]"
            },
            "controlPlaneFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName')), '2020-09-01').fqdn]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerService/managedClusters', parameters('clusterName'))]"
            },
            "runManagedIdentityName": {
              "type": "string",
              "value": "id-run-maffe-maandag"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "dns",
      "resourceGroup": "dns",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "kubeletidentityObjectId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag'), '2020-10-01').outputs.kubeletIdentityObjectId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "7317514902028164465"
            }
          },
          "parameters": {
            "kubeletidentityObjectId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "variables": {
            "dnsZoneContributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'befefa01-2a29-4197-83a8-272ff33ce314')]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Network/dnsZones/{0}', 'maffe-maandag.nl')]",
              "name": "[guid(resourceGroup().id, resourceId('Microsoft.Network/dnsZones', 'maffe-maandag.nl'), variables('dnsZoneContributorRoleDefinitionId'))]",
              "properties": {
                "principalId": "[parameters('kubeletidentityObjectId')]",
                "roleDefinitionId": "[variables('dnsZoneContributorRoleDefinitionId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "ingress",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "useExistingManagedIdentity": {
            "value": true
          },
          "managedIdentityName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag'), '2020-10-01').outputs.runManagedIdentityName.value]"
          },
          "aksName": {
            "value": "aks-maffe-maandag"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "helmRepo": {
            "value": "ingress-nginx"
          },
          "helmRepoURL": {
            "value": "https://kubernetes.github.io/ingress-nginx"
          },
          "helmApps": {
            "value": [
              {
                "helmAppName": "ingress-nginx",
                "helmApp": "ingress-nginx/ingress-nginx",
                "helmAppParams": "--version 4.4.0 --namespace ingress --create-namespace --set controller.service.externalTrafficPolicy=Local"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "3029187388790019340"
            }
          },
          "parameters": {
            "aksName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Azure Kubernetes Service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location to deploy the resources to"
              }
            },
            "forceUpdateTag": {
              "type": "string",
              "defaultValue": "[utcNow()]",
              "metadata": {
                "description": "How the deployment script should be forced to execute"
              }
            },
            "useExistingManagedIdentity": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Does the Managed Identity already exists, or should be created"
              }
            },
            "managedIdentityName": {
              "type": "string",
              "defaultValue": "id-AksRunCommandProxy",
              "metadata": {
                "description": "Name of the Managed Identity resource"
              }
            },
            "existingManagedIdentitySubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "For an existing Managed Identity, the Subscription Id it is located in"
              }
            },
            "existingManagedIdentityResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "For an existing Managed Identity, the Resource Group it is located in"
              }
            },
            "helmRepo": {
              "type": "string",
              "defaultValue": "azure-marketplace",
              "metadata": {
                "description": "Public Helm Repo Name"
              }
            },
            "helmRepoURL": {
              "type": "string",
              "defaultValue": "https://marketplace.azurecr.io/helm/v1/repo",
              "metadata": {
                "description": "Public Helm Repo URL"
              }
            },
            "helmApps": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Helm Apps {helmApp: 'azure-marketplace/wordpress', helmAppName: 'my-wordpress'}"
              }
            },
            "cleanupPreference": {
              "type": "string",
              "defaultValue": "OnSuccess",
              "metadata": {
                "description": "When the script resource is cleaned up"
              },
              "allowedValues": [
                "OnSuccess",
                "OnExpiration",
                "Always"
              ]
            }
          },
          "resources": [
            {
              "copy": {
                "name": "helmAppInstalls",
                "count": "[length(parameters('helmApps'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('helmInstall-{0}-{1}', parameters('helmApps')[copyIndex()].helmAppName, copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "aksName": {
                    "value": "[parameters('aksName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "commands": {
                    "value": [
                      "[format('helm repo add {0} {1} && helm repo update && helm upgrade --install {2} {3} {4}', parameters('helmRepo'), parameters('helmRepoURL'), parameters('helmApps')[copyIndex()].helmAppName, parameters('helmApps')[copyIndex()].helmApp, if(contains(parameters('helmApps')[copyIndex()], 'helmAppParams'), parameters('helmApps')[copyIndex()].helmAppParams, ''))]"
                    ]
                  },
                  "forceUpdateTag": {
                    "value": "[parameters('forceUpdateTag')]"
                  },
                  "useExistingManagedIdentity": {
                    "value": "[parameters('useExistingManagedIdentity')]"
                  },
                  "managedIdentityName": {
                    "value": "[parameters('managedIdentityName')]"
                  },
                  "existingManagedIdentitySubId": {
                    "value": "[parameters('existingManagedIdentitySubId')]"
                  },
                  "existingManagedIdentityResourceGroupName": {
                    "value": "[parameters('existingManagedIdentityResourceGroupName')]"
                  },
                  "cleanupPreference": {
                    "value": "[parameters('cleanupPreference')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.5.6.12127",
                      "templateHash": "25989803949072927"
                    }
                  },
                  "parameters": {
                    "aksName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Azure Kubernetes Service"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The location to deploy the resources to"
                      }
                    },
                    "forceUpdateTag": {
                      "type": "string",
                      "defaultValue": "[utcNow()]",
                      "metadata": {
                        "description": "How the deployment script should be forced to execute"
                      }
                    },
                    "rbacRolesNeeded": {
                      "type": "array",
                      "defaultValue": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c",
                        "7f6c6a51-bcf8-42ba-9220-52d62157d7db"
                      ],
                      "metadata": {
                        "description": "An array of Azure RoleIds that are required for the DeploymentScript resource"
                      }
                    },
                    "useExistingManagedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Does the Managed Identity already exists, or should be created"
                      }
                    },
                    "managedIdentityName": {
                      "type": "string",
                      "defaultValue": "id-AksRunCommandProxy",
                      "metadata": {
                        "description": "Name of the Managed Identity resource"
                      }
                    },
                    "existingManagedIdentitySubId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]",
                      "metadata": {
                        "description": "For an existing Managed Identity, the Subscription Id it is located in"
                      }
                    },
                    "existingManagedIdentityResourceGroupName": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]",
                      "metadata": {
                        "description": "For an existing Managed Identity, the Resource Group it is located in"
                      }
                    },
                    "commands": {
                      "type": "array",
                      "metadata": {
                        "description": "An array of commands to run"
                      }
                    },
                    "initialScriptDelay": {
                      "type": "string",
                      "defaultValue": "120s",
                      "metadata": {
                        "description": "A delay before the script import operation starts. Primarily to allow Azure AAD Role Assignments to propagate"
                      }
                    },
                    "cleanupPreference": {
                      "type": "string",
                      "defaultValue": "OnSuccess",
                      "metadata": {
                        "description": "When the script resource is cleaned up"
                      },
                      "allowedValues": [
                        "OnSuccess",
                        "OnExpiration",
                        "Always"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('useExistingManagedIdentity'))]",
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2018-11-30",
                      "name": "[parameters('managedIdentityName')]",
                      "location": "[parameters('location')]"
                    },
                    {
                      "copy": {
                        "name": "rbac",
                        "count": "[length(parameters('rbacRolesNeeded'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-08-01-preview",
                      "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', parameters('aksName'))]",
                      "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('aksName')), parameters('rbacRolesNeeded')[copyIndex()], if(parameters('useExistingManagedIdentity'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('rbacRolesNeeded')[copyIndex()])]",
                        "principalId": "[if(parameters('useExistingManagedIdentity'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId)]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "runAksCommand",
                        "count": "[length(parameters('commands'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex())]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', if(parameters('useExistingManagedIdentity'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "forceUpdateTag": "[parameters('forceUpdateTag')]",
                        "azCliVersion": "2.35.0",
                        "timeout": "PT10M",
                        "retentionInterval": "P1D",
                        "environmentVariables": [
                          {
                            "name": "RG",
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "name": "aksName",
                            "value": "[parameters('aksName')]"
                          },
                          {
                            "name": "command",
                            "value": "[parameters('commands')[copyIndex()]]"
                          },
                          {
                            "name": "initialDelay",
                            "value": "[parameters('initialScriptDelay')]"
                          },
                          {
                            "name": "loopIndex",
                            "value": "[string(copyIndex())]"
                          }
                        ],
                        "scriptContent": "      #!/bin/bash\n      set -e\n\n      if [ \"$loopIndex\" == \"0\" ] && [ \"$initialDelay\" != \"0\" ]\n      then\n        echo \"Waiting on RBAC replication ($initialDelay)\"\n        sleep $initialDelay\n\n        #Force RBAC refresh\n        az logout\n        az login --identity\n      fi\n\n      echo \"Sending command $command to AKS Cluster $aksName in $RG\"\n      cmdOut=$(az aks command invoke -g $RG -n $aksName -o json --command \"${command}\")\n      echo $cmdOut\n\n      jsonOutputString=$cmdOut\n      echo $jsonOutputString > $AZ_SCRIPTS_OUTPUT_PATH\n    ",
                        "cleanupPreference": "[parameters('cleanupPreference')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                        "rbac"
                      ]
                    }
                  ],
                  "outputs": {
                    "commandOutput": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('commands'))]",
                        "input": {
                          "Index": "[copyIndex()]",
                          "Name": "[format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex())]",
                          "CommandOutput": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex()))).outputs]"
                        }
                      },
                      "metadata": {
                        "description": "Array of command output from each Deployment Script AKS run command"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "helmOutputs": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('helmApps'))]",
                "input": {
                  "appName": "[parameters('helmApps')[copyIndex()].helmAppName]",
                  "outputs": "[reference(resourceId('Microsoft.Resources/deployments', format('helmInstall-{0}-{1}', parameters('helmApps')[copyIndex()].helmAppName, copyIndex())), '2020-10-01').outputs.commandOutput.value]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "certmanager",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "useExistingManagedIdentity": {
            "value": true
          },
          "managedIdentityName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag'), '2020-10-01').outputs.runManagedIdentityName.value]"
          },
          "aksName": {
            "value": "aks-maffe-maandag"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "helmRepo": {
            "value": "jetstack"
          },
          "helmRepoURL": {
            "value": "https://charts.jetstack.io"
          },
          "helmApps": {
            "value": [
              {
                "helmAppName": "cert-manager",
                "helmApp": "jetstack/cert-manager",
                "helmAppParams": "--version v1.10.1 --namespace cert-manager --create-namespace --set installCRDs=true"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "3029187388790019340"
            }
          },
          "parameters": {
            "aksName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Azure Kubernetes Service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location to deploy the resources to"
              }
            },
            "forceUpdateTag": {
              "type": "string",
              "defaultValue": "[utcNow()]",
              "metadata": {
                "description": "How the deployment script should be forced to execute"
              }
            },
            "useExistingManagedIdentity": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Does the Managed Identity already exists, or should be created"
              }
            },
            "managedIdentityName": {
              "type": "string",
              "defaultValue": "id-AksRunCommandProxy",
              "metadata": {
                "description": "Name of the Managed Identity resource"
              }
            },
            "existingManagedIdentitySubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "For an existing Managed Identity, the Subscription Id it is located in"
              }
            },
            "existingManagedIdentityResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "For an existing Managed Identity, the Resource Group it is located in"
              }
            },
            "helmRepo": {
              "type": "string",
              "defaultValue": "azure-marketplace",
              "metadata": {
                "description": "Public Helm Repo Name"
              }
            },
            "helmRepoURL": {
              "type": "string",
              "defaultValue": "https://marketplace.azurecr.io/helm/v1/repo",
              "metadata": {
                "description": "Public Helm Repo URL"
              }
            },
            "helmApps": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Helm Apps {helmApp: 'azure-marketplace/wordpress', helmAppName: 'my-wordpress'}"
              }
            },
            "cleanupPreference": {
              "type": "string",
              "defaultValue": "OnSuccess",
              "metadata": {
                "description": "When the script resource is cleaned up"
              },
              "allowedValues": [
                "OnSuccess",
                "OnExpiration",
                "Always"
              ]
            }
          },
          "resources": [
            {
              "copy": {
                "name": "helmAppInstalls",
                "count": "[length(parameters('helmApps'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('helmInstall-{0}-{1}', parameters('helmApps')[copyIndex()].helmAppName, copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "aksName": {
                    "value": "[parameters('aksName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "commands": {
                    "value": [
                      "[format('helm repo add {0} {1} && helm repo update && helm upgrade --install {2} {3} {4}', parameters('helmRepo'), parameters('helmRepoURL'), parameters('helmApps')[copyIndex()].helmAppName, parameters('helmApps')[copyIndex()].helmApp, if(contains(parameters('helmApps')[copyIndex()], 'helmAppParams'), parameters('helmApps')[copyIndex()].helmAppParams, ''))]"
                    ]
                  },
                  "forceUpdateTag": {
                    "value": "[parameters('forceUpdateTag')]"
                  },
                  "useExistingManagedIdentity": {
                    "value": "[parameters('useExistingManagedIdentity')]"
                  },
                  "managedIdentityName": {
                    "value": "[parameters('managedIdentityName')]"
                  },
                  "existingManagedIdentitySubId": {
                    "value": "[parameters('existingManagedIdentitySubId')]"
                  },
                  "existingManagedIdentityResourceGroupName": {
                    "value": "[parameters('existingManagedIdentityResourceGroupName')]"
                  },
                  "cleanupPreference": {
                    "value": "[parameters('cleanupPreference')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.5.6.12127",
                      "templateHash": "25989803949072927"
                    }
                  },
                  "parameters": {
                    "aksName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Azure Kubernetes Service"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The location to deploy the resources to"
                      }
                    },
                    "forceUpdateTag": {
                      "type": "string",
                      "defaultValue": "[utcNow()]",
                      "metadata": {
                        "description": "How the deployment script should be forced to execute"
                      }
                    },
                    "rbacRolesNeeded": {
                      "type": "array",
                      "defaultValue": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c",
                        "7f6c6a51-bcf8-42ba-9220-52d62157d7db"
                      ],
                      "metadata": {
                        "description": "An array of Azure RoleIds that are required for the DeploymentScript resource"
                      }
                    },
                    "useExistingManagedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Does the Managed Identity already exists, or should be created"
                      }
                    },
                    "managedIdentityName": {
                      "type": "string",
                      "defaultValue": "id-AksRunCommandProxy",
                      "metadata": {
                        "description": "Name of the Managed Identity resource"
                      }
                    },
                    "existingManagedIdentitySubId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]",
                      "metadata": {
                        "description": "For an existing Managed Identity, the Subscription Id it is located in"
                      }
                    },
                    "existingManagedIdentityResourceGroupName": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]",
                      "metadata": {
                        "description": "For an existing Managed Identity, the Resource Group it is located in"
                      }
                    },
                    "commands": {
                      "type": "array",
                      "metadata": {
                        "description": "An array of commands to run"
                      }
                    },
                    "initialScriptDelay": {
                      "type": "string",
                      "defaultValue": "120s",
                      "metadata": {
                        "description": "A delay before the script import operation starts. Primarily to allow Azure AAD Role Assignments to propagate"
                      }
                    },
                    "cleanupPreference": {
                      "type": "string",
                      "defaultValue": "OnSuccess",
                      "metadata": {
                        "description": "When the script resource is cleaned up"
                      },
                      "allowedValues": [
                        "OnSuccess",
                        "OnExpiration",
                        "Always"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('useExistingManagedIdentity'))]",
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2018-11-30",
                      "name": "[parameters('managedIdentityName')]",
                      "location": "[parameters('location')]"
                    },
                    {
                      "copy": {
                        "name": "rbac",
                        "count": "[length(parameters('rbacRolesNeeded'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-08-01-preview",
                      "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', parameters('aksName'))]",
                      "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('aksName')), parameters('rbacRolesNeeded')[copyIndex()], if(parameters('useExistingManagedIdentity'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('rbacRolesNeeded')[copyIndex()])]",
                        "principalId": "[if(parameters('useExistingManagedIdentity'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId)]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "runAksCommand",
                        "count": "[length(parameters('commands'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex())]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', if(parameters('useExistingManagedIdentity'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "forceUpdateTag": "[parameters('forceUpdateTag')]",
                        "azCliVersion": "2.35.0",
                        "timeout": "PT10M",
                        "retentionInterval": "P1D",
                        "environmentVariables": [
                          {
                            "name": "RG",
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "name": "aksName",
                            "value": "[parameters('aksName')]"
                          },
                          {
                            "name": "command",
                            "value": "[parameters('commands')[copyIndex()]]"
                          },
                          {
                            "name": "initialDelay",
                            "value": "[parameters('initialScriptDelay')]"
                          },
                          {
                            "name": "loopIndex",
                            "value": "[string(copyIndex())]"
                          }
                        ],
                        "scriptContent": "      #!/bin/bash\n      set -e\n\n      if [ \"$loopIndex\" == \"0\" ] && [ \"$initialDelay\" != \"0\" ]\n      then\n        echo \"Waiting on RBAC replication ($initialDelay)\"\n        sleep $initialDelay\n\n        #Force RBAC refresh\n        az logout\n        az login --identity\n      fi\n\n      echo \"Sending command $command to AKS Cluster $aksName in $RG\"\n      cmdOut=$(az aks command invoke -g $RG -n $aksName -o json --command \"${command}\")\n      echo $cmdOut\n\n      jsonOutputString=$cmdOut\n      echo $jsonOutputString > $AZ_SCRIPTS_OUTPUT_PATH\n    ",
                        "cleanupPreference": "[parameters('cleanupPreference')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                        "rbac"
                      ]
                    }
                  ],
                  "outputs": {
                    "commandOutput": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('commands'))]",
                        "input": {
                          "Index": "[copyIndex()]",
                          "Name": "[format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex())]",
                          "CommandOutput": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex()))).outputs]"
                        }
                      },
                      "metadata": {
                        "description": "Array of command output from each Deployment Script AKS run command"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "helmOutputs": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('helmApps'))]",
                "input": {
                  "appName": "[parameters('helmApps')[copyIndex()].helmAppName]",
                  "outputs": "[reference(resourceId('Microsoft.Resources/deployments', format('helmInstall-{0}-{1}', parameters('helmApps')[copyIndex()].helmAppName, copyIndex())), '2020-10-01').outputs.commandOutput.value]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "external-dns",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "useExistingManagedIdentity": {
            "value": true
          },
          "managedIdentityName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag'), '2020-10-01').outputs.runManagedIdentityName.value]"
          },
          "aksName": {
            "value": "aks-maffe-maandag"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "helmRepo": {
            "value": "bitnami"
          },
          "helmRepoURL": {
            "value": "https://charts.bitnami.com/bitnami"
          },
          "helmApps": {
            "value": [
              {
                "helmAppName": "external-dns",
                "helmApp": "bitnami/external-dns",
                "helmAppParams": "[format('--version 6.12.1 --namespace external-dns --create-namespace --set provider=azure --set azure.resourceGroup=dns --set azure.tenantId={0} --set azure.subscriptionId={1} --set azure.useManagedIdentityExtension=true', subscription().tenantId, subscription().subscriptionId)]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "3029187388790019340"
            }
          },
          "parameters": {
            "aksName": {
              "type": "string",
              "metadata": {
                "description": "The name of the Azure Kubernetes Service"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location to deploy the resources to"
              }
            },
            "forceUpdateTag": {
              "type": "string",
              "defaultValue": "[utcNow()]",
              "metadata": {
                "description": "How the deployment script should be forced to execute"
              }
            },
            "useExistingManagedIdentity": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Does the Managed Identity already exists, or should be created"
              }
            },
            "managedIdentityName": {
              "type": "string",
              "defaultValue": "id-AksRunCommandProxy",
              "metadata": {
                "description": "Name of the Managed Identity resource"
              }
            },
            "existingManagedIdentitySubId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "For an existing Managed Identity, the Subscription Id it is located in"
              }
            },
            "existingManagedIdentityResourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "For an existing Managed Identity, the Resource Group it is located in"
              }
            },
            "helmRepo": {
              "type": "string",
              "defaultValue": "azure-marketplace",
              "metadata": {
                "description": "Public Helm Repo Name"
              }
            },
            "helmRepoURL": {
              "type": "string",
              "defaultValue": "https://marketplace.azurecr.io/helm/v1/repo",
              "metadata": {
                "description": "Public Helm Repo URL"
              }
            },
            "helmApps": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Helm Apps {helmApp: 'azure-marketplace/wordpress', helmAppName: 'my-wordpress'}"
              }
            },
            "cleanupPreference": {
              "type": "string",
              "defaultValue": "OnSuccess",
              "metadata": {
                "description": "When the script resource is cleaned up"
              },
              "allowedValues": [
                "OnSuccess",
                "OnExpiration",
                "Always"
              ]
            }
          },
          "resources": [
            {
              "copy": {
                "name": "helmAppInstalls",
                "count": "[length(parameters('helmApps'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('helmInstall-{0}-{1}', parameters('helmApps')[copyIndex()].helmAppName, copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "aksName": {
                    "value": "[parameters('aksName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "commands": {
                    "value": [
                      "[format('helm repo add {0} {1} && helm repo update && helm upgrade --install {2} {3} {4}', parameters('helmRepo'), parameters('helmRepoURL'), parameters('helmApps')[copyIndex()].helmAppName, parameters('helmApps')[copyIndex()].helmApp, if(contains(parameters('helmApps')[copyIndex()], 'helmAppParams'), parameters('helmApps')[copyIndex()].helmAppParams, ''))]"
                    ]
                  },
                  "forceUpdateTag": {
                    "value": "[parameters('forceUpdateTag')]"
                  },
                  "useExistingManagedIdentity": {
                    "value": "[parameters('useExistingManagedIdentity')]"
                  },
                  "managedIdentityName": {
                    "value": "[parameters('managedIdentityName')]"
                  },
                  "existingManagedIdentitySubId": {
                    "value": "[parameters('existingManagedIdentitySubId')]"
                  },
                  "existingManagedIdentityResourceGroupName": {
                    "value": "[parameters('existingManagedIdentityResourceGroupName')]"
                  },
                  "cleanupPreference": {
                    "value": "[parameters('cleanupPreference')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.5.6.12127",
                      "templateHash": "25989803949072927"
                    }
                  },
                  "parameters": {
                    "aksName": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the Azure Kubernetes Service"
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "The location to deploy the resources to"
                      }
                    },
                    "forceUpdateTag": {
                      "type": "string",
                      "defaultValue": "[utcNow()]",
                      "metadata": {
                        "description": "How the deployment script should be forced to execute"
                      }
                    },
                    "rbacRolesNeeded": {
                      "type": "array",
                      "defaultValue": [
                        "b24988ac-6180-42a0-ab88-20f7382dd24c",
                        "7f6c6a51-bcf8-42ba-9220-52d62157d7db"
                      ],
                      "metadata": {
                        "description": "An array of Azure RoleIds that are required for the DeploymentScript resource"
                      }
                    },
                    "useExistingManagedIdentity": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Does the Managed Identity already exists, or should be created"
                      }
                    },
                    "managedIdentityName": {
                      "type": "string",
                      "defaultValue": "id-AksRunCommandProxy",
                      "metadata": {
                        "description": "Name of the Managed Identity resource"
                      }
                    },
                    "existingManagedIdentitySubId": {
                      "type": "string",
                      "defaultValue": "[subscription().subscriptionId]",
                      "metadata": {
                        "description": "For an existing Managed Identity, the Subscription Id it is located in"
                      }
                    },
                    "existingManagedIdentityResourceGroupName": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().name]",
                      "metadata": {
                        "description": "For an existing Managed Identity, the Resource Group it is located in"
                      }
                    },
                    "commands": {
                      "type": "array",
                      "metadata": {
                        "description": "An array of commands to run"
                      }
                    },
                    "initialScriptDelay": {
                      "type": "string",
                      "defaultValue": "120s",
                      "metadata": {
                        "description": "A delay before the script import operation starts. Primarily to allow Azure AAD Role Assignments to propagate"
                      }
                    },
                    "cleanupPreference": {
                      "type": "string",
                      "defaultValue": "OnSuccess",
                      "metadata": {
                        "description": "When the script resource is cleaned up"
                      },
                      "allowedValues": [
                        "OnSuccess",
                        "OnExpiration",
                        "Always"
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('useExistingManagedIdentity'))]",
                      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                      "apiVersion": "2018-11-30",
                      "name": "[parameters('managedIdentityName')]",
                      "location": "[parameters('location')]"
                    },
                    {
                      "copy": {
                        "name": "rbac",
                        "count": "[length(parameters('rbacRolesNeeded'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-08-01-preview",
                      "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', parameters('aksName'))]",
                      "name": "[guid(resourceId('Microsoft.ContainerService/managedClusters', parameters('aksName')), parameters('rbacRolesNeeded')[copyIndex()], if(parameters('useExistingManagedIdentity'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))))]",
                      "properties": {
                        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('rbacRolesNeeded')[copyIndex()])]",
                        "principalId": "[if(parameters('useExistingManagedIdentity'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId, reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2018-11-30').principalId)]",
                        "principalType": "ServicePrincipal"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "runAksCommand",
                        "count": "[length(parameters('commands'))]",
                        "mode": "serial",
                        "batchSize": 1
                      },
                      "type": "Microsoft.Resources/deploymentScripts",
                      "apiVersion": "2020-10-01",
                      "name": "[format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex())]",
                      "location": "[parameters('location')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', if(parameters('useExistingManagedIdentity'), extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('existingManagedIdentitySubId'), parameters('existingManagedIdentityResourceGroupName')), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))))]": {}
                        }
                      },
                      "kind": "AzureCLI",
                      "properties": {
                        "forceUpdateTag": "[parameters('forceUpdateTag')]",
                        "azCliVersion": "2.35.0",
                        "timeout": "PT10M",
                        "retentionInterval": "P1D",
                        "environmentVariables": [
                          {
                            "name": "RG",
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "name": "aksName",
                            "value": "[parameters('aksName')]"
                          },
                          {
                            "name": "command",
                            "value": "[parameters('commands')[copyIndex()]]"
                          },
                          {
                            "name": "initialDelay",
                            "value": "[parameters('initialScriptDelay')]"
                          },
                          {
                            "name": "loopIndex",
                            "value": "[string(copyIndex())]"
                          }
                        ],
                        "scriptContent": "      #!/bin/bash\n      set -e\n\n      if [ \"$loopIndex\" == \"0\" ] && [ \"$initialDelay\" != \"0\" ]\n      then\n        echo \"Waiting on RBAC replication ($initialDelay)\"\n        sleep $initialDelay\n\n        #Force RBAC refresh\n        az logout\n        az login --identity\n      fi\n\n      echo \"Sending command $command to AKS Cluster $aksName in $RG\"\n      cmdOut=$(az aks command invoke -g $RG -n $aksName -o json --command \"${command}\")\n      echo $cmdOut\n\n      jsonOutputString=$cmdOut\n      echo $jsonOutputString > $AZ_SCRIPTS_OUTPUT_PATH\n    ",
                        "cleanupPreference": "[parameters('cleanupPreference')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                        "rbac"
                      ]
                    }
                  ],
                  "outputs": {
                    "commandOutput": {
                      "type": "array",
                      "copy": {
                        "count": "[length(parameters('commands'))]",
                        "input": {
                          "Index": "[copyIndex()]",
                          "Name": "[format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex())]",
                          "CommandOutput": "[reference(resourceId('Microsoft.Resources/deploymentScripts', format('AKS-Run-{0}-{1}-{2}', parameters('aksName'), deployment().name, copyIndex()))).outputs]"
                        }
                      },
                      "metadata": {
                        "description": "Array of command output from each Deployment Script AKS run command"
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "helmOutputs": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('helmApps'))]",
                "input": {
                  "appName": "[parameters('helmApps')[copyIndex()].helmAppName]",
                  "outputs": "[reference(resourceId('Microsoft.Resources/deployments', format('helmInstall-{0}-{1}', parameters('helmApps')[copyIndex()].helmAppName, copyIndex())), '2020-10-01').outputs.commandOutput.value]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag')]"
      ]
    }
  ],
  "outputs": {
    "certmanagerOutput": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'certmanager'), '2020-10-01').outputs.helmOutputs.value]"
    },
    "ingressOutput": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'ingress'), '2020-10-01').outputs.helmOutputs.value]"
    },
    "externalDNSOutput": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'external-dns'), '2020-10-01').outputs.helmOutputs.value]"
    },
    "kubeletIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag'), '2020-10-01').outputs.kubeletIdentityClientId.value]"
    },
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks-maffe-maandag'), '2020-10-01').outputs.controlPlaneFQDN.value]"
    }
  }
}